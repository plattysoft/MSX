10 DEFINT B-W

20 L=VPEEK (0)
21 DIM LS(24)
22 FOR I=0 TO 23 STEP 2
23  LT=VPEEK(I\2+2)
24  LS(I)=LT\16-1:LS(I+1)=(LT MOD 16)-1
25 NEXT I
36 SS=VPEEK(1)

100 ' LOAD SCREEN AND SPRITES
110 BLOAD "levels.sc2",S
131 VPOKE 1,SS

190 IF L=25 THEN GOSUB 3000:RUN"end.bas
191 BLOAD "level_"+CHR$(64+L)+".scr",S
192 FOR I=0 to 4: PUT SPRITE I,,0:NEXT

195 ' M IS EXIT MODE: -1 = FAIL, >=0 = SUCCESS, NUMBER OF MICE (0-3)
195 CALL TURBO ON
196 DIM MX(3),MY(3),CS(4)
197 DEFINT B-W
198 SS=VPEEK(1)

199 MC=0:LT=144:GOSUB 1100:GOSUB 1000

200 PUT SPRITE 4,,0,0

300 X=16:Y=148:AX=0:AY=0:LP=0:LS=1
310 FOR I=&H1860 TO &H1B00
311   VP = VPEEK(I)
312   IF VP=160 THEN X=(I MOD 32)*8+8:Y=((I-&H1800)\32)*8-28
313   IF VP=62 OR VP=63 THEN LP=1
319 NEXT I

350 IF LP=1 THEN SOUND 8, &B11111 ELSE SOUND 8,0
351 SOUND 9, 0
361 SOUND 7, &B10101010
362 SOUND 1,&H4:SOUND 0,&H80
364 SOUND 11,&H80
365 SOUND 12,&H04
366 SOUND 13, 12
367 SOUND 6, &B01101

500 ' MAIN LOOP
510 TIME=0
600 ' DRAW LOOP
610 PUT SPRITE 0,(X,Y),15,CS(CA)
620 PUT SPRITE 1,(X-8,Y+14),4,4
630 PUT SPRITE 2,(X+8,Y+14),4,5
640 PUT SPRITE 3,,0
650 IF BD>0 THEN PUT SPRITE 3,(X,Y+27),BD,SD
660 IF BL>0 THEN PUT SPRITE 3,(X-24,Y+14),BL,SD
670 IF BR>0 THEN PUT SPRITE 3,(X+24,Y+14),BR,SD

700 ' INPUT MANAGEMENT
710 BD=0:BR=0:BL=0
720 S=STICK(SS)
730 IF S=1 OR S=8 OR S=2 THEN BD=10:AY=AY-.2:SD=16+FIX(RND(1)*4)
740 IF S=7 THEN BR=10:AX=AX-.22:SD=8+FIX(RND(1)*2)
750 IF S=3 THEN BL=10:AX=AX+.22:SD=6+FIX(RND(1)*2)

760 IF BD=0 AND BR=0 AND BL=0 THEN SOUND 9,0 ELSE SOUND 9, 12

800 ' UPDATE LOOP
810 AY=AY+.1
820 AX=AX*.96:IF ABS(AX)<0.05 THEN AX=0
830 X=X+AX
840 Y=Y+AY
850 TT=TT+1
855 IF TT MOD 3 = 0 THEN GOSUB 1200
860 IF TT MOD 5 = 0 THEN CA=CA+1: IF CA=4 THEN CA=0:IF RND(1)<0.6 THEN ON FIX(RND(1)*4) GOSUB 1010,1020,1030 ELSE GOSUB 1000
870 IF TT MOD 40 = 0 THEN GOSUB 1100

900 ' COLLISION CLASHING / CORRECTION
910 IF AY>0 THEN 920 ELSE 930
920 T1=&H1800+((Y+23)\8)*&H20+(X-8)\8
921 T2=&H1800+((Y+27)\8)*&H20+(X)\8
923 T3=&H1800+((Y+27)\8)*&H20+(X+16)\8
924 T4=&H1800+((Y+23)\8)*&H20+(X+23)\8
925 T5=&H1800+((Y+27)\8)*&H20+(X+8)\8
929 GOTO 940
930 T1=&H1800+((Y+16)\8)*&H20+(X-8)\8
931 T2=&H1800+((Y)\8)*&H20+(X)\8
932 T3=&H1800+((Y)\8)*&H20+(X+16)\8
934 T4=&H1800+((Y+16)\8)*&H20+(X+23)\8
935 T5=&H1800+((Y)\8)*&H20+(X+8)\8
939 GOTO 940

940 IF AX>0 THEN 950 ELSE 960
950 U1=&H1800+((Y)\8)*&H20+(X+16)\8
952 U2=&H1800+((Y+16)\8)*&H20+(X+23)\8
954 U3=&H1800+((Y+23)\8)*&H20+(X+23)\8
956 U4=&H1800+((Y+27)\8)*&H20+(X+16)\8
957 U5=&H1800+((Y+8)\8)*&H20+(X+16)\8
959 GOTO 970
960 U1=&H1800+((Y)\8)*&H20+(X)\8
962 U2=&H1800+((Y+16)\8)*&H20+(X-8)\8
964 U3=&H1800+((Y+23)\8)*&H20+(X-8)\8
966 U4=&H1800+((Y+27)\8)*&H20+(X)\8
967 U5=&H1800+((Y+8)\8)*&H20+(X)\8
969 GOTO 970

970 C1=VPEEK(T1):C2=VPEEK(T2):C3=VPEEK(T3):C4=VPEEK(T4):C5=VPEEK(T5)
971 D1=VPEEK(U1):D2=VPEEK(U2):D3=VPEEK(U3):D4=VPEEK(U4):D5=VPEEK(U5)

972 IF C1>64 OR C2>64 OR C3>64 OR C4>64 OR C5>64 THEN IF ABS(AY)>1.2 THEN GOTO 1700 ELSE Y=Y-AY:AY=0
973 IF D1>64 OR D2>64 OR D3>64 OR D4>64 OR D5>64 THEN IF ABS(AX)>1.2 THEN GOTO 1700 ELSE X=X-AX:AX=0

975 'Checking for mice (nmouse start is either 19 or 21, it depends of the value, should go in sets of 2 (19-20/51-52) (21-22/53-54) 
975 IF C1>=19 AND C1<=54 THEN MP=T1:C0=C1:GOSUB 1300
976 IF C2>=19 AND C2<=54 THEN MP=T2:C0=C2:GOSUB 1300
977 IF C3>=19 AND C3<=54 THEN MP=T3:C0=C3:GOSUB 1300
978 IF C4>=19 AND C4<=54 THEN MP=T4:C0=C4:GOSUB 1300
979 IF C5>=19 AND C5<=54 THEN MP=T5:C0=C5:GOSUB 1300

980 IF D1>=19 AND D1<=54 THEN MP=U1:C0=D1:GOSUB 1300
981 IF D2>=19 AND D2<=54 THEN MP=U2:C0=D2:GOSUB 1300
982 IF D3>=19 AND D3<=54 THEN MP=U3:C0=D3:GOSUB 1300
983 IF D4>=19 AND D4<=54 THEN MP=U4:C0=D4:GOSUB 1300
984 IF D5>=19 AND D5<=54 THEN MP=U5:C0=D5:GOSUB 1300

985 'TODO Move before line 972
986 IF LS=0 GOTO 988
987 IF C1=62 OR C2=62 OR C3=62 OR C4=62 OR C5=62 OR D1=62 OR D2=62 OR D3=62 OR D4=62 OR D5=62 OR C1=63 OR C2=63 OR C3=63 OR C4=63 OR C5=63 OR D1=63 OR D2=63 OR D3=63 OR D4=63 OR D5=63 THEN 1700

988 ' Check finish pad
989 IF C2>=164 AND C2<=167 AND C3>=164 AND C3<=167 AND AY=0 THEN GOTO 1900
990 IF FX>0 THEN FX=FX-1: IF FX=0 THEN READ FX,A,B: SOUND 5,A: SOUND 4,B: IF A=0 AND B=0 THEN FX=0: SOUND 10,0
998 IF TIME<3 GOTO 998
999 GOTO 500

1000 CS(0)=0:CS(1)=1:CS(2)=2:CS(3)=3:RETURN
1010 CS(0)=3:CS(1)=25:CS(2)=25:CS(3)=3:RETURN
1020 CS(0)=3:CS(1)=26:CS(2)=26:CS(3)=3:RETURN
1030 CS(0)=0:CS(1)=24:CS(2)=23:CS(3)=24:RETURN

1100 ' SWAP LASER STATE color at tiles 62, 63,from &H89 to 00. Color table starts at &H2000
1120 IF LS=1 THEN LC=&H00:LS=0 ELSE LC=&H89:LS=1
1150 FOR I=&H21F0 TO &H21FF 
1160  VPOKE I, LC:VPOKE I+&H800, LC: VPOKE I+&H1000, LC
1170 NEXT I
1180 ' Lasers ON enable sound on channel 3 with sound generator
1180 IF LC=0 THEN SOUND 8, 0 ELSE IF LP=1 THEN SOUND 8, &B11111
1199 RETURN

1200 'ANIMATE LASER, we have 4 patterns, they all have the same colors, tile 144-147, bae address for the copy is tile 62 -> 62*8=496 -> 0x1F0
1200 'TODO: CONSIDER A COMPLETELY RANDOM ANIMATION
1210 LT=LT+1:IF LT=148 THEN LT=144
1220 FOR I=0 TO 7
1230  LL=VPEEK(LT*8+I): LM=VPEEK(LT*8+I+32)
1240  VPOKE &H1F0+I, LL:VPOKE I+&H9F0, LL: VPOKE I+&H11F0, LL
1241  VPOKE &H1F8+I, LM:VPOKE I+&H9F8, LM: VPOKE I+&H11F8, LM
1250 NEXT I
1299 RETURN

1300 ' Capture mouse subroutine
1300 IF C0>32 THEN MP=MP-32
1301 IF C0 MOD 2 = 0 THEN MP=MP-1
1307 IF VPEEK(MP)>0 THEN MC=MC+1 ELSE RETURN
1308 VPOKE MP,0:VPOKE MP+1,0:VPOKE MP+&H20,0:VPOKE MP+&H21,0
1309 FX=1: SOUND 10,15: RESTORE 1400
1310 RETURN

1400 ' SOUND FOR CATCHING MICE
1400 DATA 2, &H00, &H55, 2, &H00, &H40, 0, 0, 0

1691 ' TEST OVER DIALOG (RETRY / MENU)
1691 DATA 10,11,11,11,11,11, 11, 11, 11, 11, 11, 11, 11, 11, 11,12
1692 DATA 13,14,14,14,14,13,223,217,222,223, 14,220,250,217,221,15
1693 DATA 13,14,14,14,14,13, 17, 17, 17, 17, 17, 17, 17, 17, 17,15
1694 DATA 13,40,41,42,14,13, 14, 14, 14, 14, 14, 14, 14, 14, 14,15
1695 DATA 13,43,44,45,14,13, 14, 14,221,217,223,221,252, 14, 14,15
1696 DATA 13,46,47,48,14,13, 14, 14, 14, 14, 14, 14, 14, 14, 14,15
1697 DATA 13,14,14,14,14,13, 14, 14,218,217,219,249, 14, 14, 14,15
1698 DATA 16,17,17,17,17,17, 17, 17, 17, 17, 17, 17, 17, 17, 17,18

1700 ' TEST OVER DIALOG DISPLAY
1700 PUT SPRITE 3,,0:PUT SPRITE 0,,,15:SOUND 8,0:SOUND 9,0:SOUND 5,0: SOUND 4,0
1701 TIME=0
1702 sound 8, &B11111
1703 SOUND 1, &H08: SOUND 0, &H00
1704 SOUND 12,&H30: SOUND 11, &H80
1705 SOUND 13, 3
1706 IF TIME<100 GOTO 1706
1707 PUT SPRITE 0,,0: PUT SPRITE 1,(72,75),0,13: PUT SPRITE 2,(72,75+16),0,14: PUT SPRITE 3,(72,75+32),0,13
1708 RESTORE 1691
1709 FOR I=&H1900 TO &H19E0 STEP &H20: FOR J=8 TO 23: READ V:VPOKE I+J,V:NEXT J:NEXT I
1710 VPOKE 15,0:GOTO 2920

1891 ' TEST PASSED DIALOG (NEXT / RETRY / MENU)
1891 DATA 10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12
1892 DATA 13,14,14,14,14,13,14,14,14,14,14,14,14,14,14,15
1893 DATA 13, 6, 7,14,14,13,14,14,219,217,251,223,14,14,14,15
1894 DATA 13,14,14,14,14,13,14,14,14, 14, 14, 14 ,14,14,14,15
1895 DATA 13,38,39,14,14,13,14,14,221,217,223,221,252,14,14,15
1896 DATA 13,14,14,14,14,13,14,14,14 ,14 ,14 ,14 ,14,14,14,15
1897 DATA 13, 6, 7,14,14,13,14,14,218,217,219,249,14,14,14,15
1898 DATA 16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,18

1900 ' TEST PASSED DIALOG DISPLAY
1900 PUT SPRITE 3,,0:SOUND 8,&B11000:SOUND 9,0: SOUND 12,&H0: SOUND 11, &H80:SOUND 5,0: SOUND 4,0:RESTORE 2000:FX=1
1901 TIME=0:AX=-1:YY=Y
1902 'JUMP, LAND AND SMILE TODO: turn around
1903 AX=AX+.05:YY=YY+AX
1904 PUT SPRITE 0,(X,YY),,0
1905 'TODO" Use channel 3 for FX

1905 IF TIME MOD 4 <> 0 GOTO 1905
1906 IF FX>1 THEN FX=FX-1 ELSE IF FX=1 THEN READ R1, R0:SOUND 0, R0:SOUND 1, R1:SOUND 13,13: IF R1=0 AND R0=0 THEN FX=0 ELSE FX=8

1907 IF YY<Y GOTO 1903
1908 FOR I=20 TO 22:PUT SPRITE 0,,,I:TIME=0
1909   IF TIME<12 GOTO 1909 
1910 NEXT I

1917 PUT SPRITE 0,,,23
1918 SOUND 12, &H0:SOUND 11, &HFF: SOUND 13, 4
1919 IF TIME<100 GOTO 1919

1921 PUT SPRITE 0,,0: PUT SPRITE 1,(72,75),0,13: PUT SPRITE 2,(72,75+16),0,14: PUT SPRITE 3,(72,75+32),0,13
1922 RESTORE 1891
1923 FOR I=&H1900 TO &H19E0 STEP &H20: FOR J=8 TO 23: READ V:VPOKE I+J,V:NEXT J:NEXT I
1925 IF MC>0 THEN PUT SPRITE 1,,8
1926 IF MC>1 THEN PUT SPRITE 2,,8
1927 IF MC>2 THEN PUT SPRITE 3,,8
1929 VPOKE 15,MC+1:GOTO 2920

2000 DATA &H1,&HAC,&H1,&H1D, &H0,&HFE, &H1,&H1D, &H1,&H1D
2020 DATA &H0, &H0

2920 ' GENERAL EXIT POINT TO LOAD NEXT LEVEL
2920 CALL TURBO OFF
2921 M=VPEEK(15)-1
2922 IF M>LS(L-1) THEN LS(L-1)=M
2930 IF M=-1 GOTO 2960

2940 ' HANDLING OF TEST PASSED OPTIONS
2940 PUT SPRITE 0, (112, 79+Y), 10, 12
2941 S=STICK(SS)
2942 IF S<>R THEN R=S ELSE GOTO 2945
2943 IF S=1 THEN Y=Y-16: IF Y<0 THEN Y=32
2944 IF S=5 THEN Y=Y+16: IF Y>32 THEN Y=0
2945 IF STRIG(SS) THEN IF Y=32 THEN BLOAD"loading.sc2",S: GOSUB 3000: RUN"lselect.bas" ELSE IF Y=0 THEN L=L+1: GOTO 190 ELSE GOTO 190
2950 GOTO 2940

2960 ' HANDLING OF TEST OVER OPTIONS
2960 PUT SPRITE 0, (112, 95+Y), 10, 12
2970 S=STICK(SS)
2971 IF S<>R THEN R=S: IF S<>0 THEN IF Y=16 THEN Y=0 ELSE Y=16
2972 IF STRIG(SS) THEN IF Y=16 THEN BLOAD"loading.sc2",S: GOSUB 3000: RUN"lselect.bas" ELSE GOTO 190
2980 GOTO 2960

3000 ' SAVE LEVEL VALUES (needs to be done on each exit to prevent problems when you only see the game over dialog)
3010 FOR I=0 TO 23 STEP 2
3020  VPOKE I\2+2, (LS(I)+1)*16+(LS(I+1)+1)
3030 NEXT I
3040 VPOKE 0, L
3050 VPOKE 1, SS
3060 RETURN
