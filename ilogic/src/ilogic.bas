10 ' --- Slot 0
20 ' color 15
30 DATA 00,03,0F,1F,3F,3F,7F,7F,7F,7F,7F,3F,3F,1F,0F,03
40 DATA 00,E0,F8,FC,FE,FE,FF,FF,FF,FF,FF,FE,FE,FC,F8,E0
50 '
60 ' --- Slot 1
70 ' color 15
80 DATA 00,01,01,01,01,02,02,02,07,0E,1C,3C,38,C8,F0,7C
90 DATA 00,C0,C0,40,40,20,20,20,30,30,38,38,39,27,1E,38
100 '
110 ' --- Slot 2
120 ' color 15
130 DATA 00,00,01,01,01,01,01,01,07,5E,6C,68,40,40,00,00
140 DATA 00,00,C0,C0,40,40,20,20,30,30,38,38,38,00,38,7E
150 '
160 ' --- Slot 3
170 ' color 15
180 DATA 00,01,01,01,01,01,01,01,01,01,03,03,03,00,03,07
190 DATA 00,C0,C0,60,10,0C,1C,38,B8,90,A0,B0,98,00,80,E0
200 '
210 ' --- Slot 1
220 ' color 15
230 DATA 00,03,03,02,02,02,02,04,04,0C,0C,1C,1C,00,1C,3F
240 DATA 00,E0,E0,10,10,08,08,04,04,0C,0C,1C,1C,00,1C,3F
241 ' --- Slot 20
242 ' color 15
243 DATA 00,00,00,00,01,03,02,01,01,07,0E,3C,38,C8,F0,7D
244 DATA 00,00,00,00,C0,E0,30,08,04,1C,38,70,E0,00,E0,F8
250 ' --- Slot 22
251 ' color 15
252 DATA 00,01,01,01,03,02,02,06,0E,1C,3C,38,C8,F0,3C,00
253 DATA 00,C0,C0,60,10,0C,1C,78,38,D0,E0,70,18,00,00,00
254 ' --- Slot 22
255 ' color 15
256 DATA 01,01,01,01,01,00,00,00,01,03,03,07,07,09,0E,07
257 DATA C0,C0,40,40,20,A0,90,90,18,18,1C,1D,1B,16,0C,80
258 ' --- Slot 2
259 ' color 15
260 DATA 01,01,01,01,01,02,02,02,01,00,00,00,00,00,00,00
261 DATA CF,F1,03,06,0E,0D,0B,06,84,F1,7B,1B,0B,01,01,00
269 ' --- Slot 4
270 ' color 4
280 DATA 00,00,00,00,00,0C,1E,3E,7C,E0,80,80,E0,A0,C0,00
290 DATA 0C,1E,1A,1A,1E,0C,00,00,00,00,08,0C,0A,0E,00,00
330 '
340 ' --- Slot 5
350 ' color 4
360 DATA 00,00,00,00,00,0C,1E,1E,1C,18,10,10,08,0F,05,06
370 DATA 0C,1E,1A,1A,1E,0C,00,00,00,00,00,00,00,00,00,00
410 '
420 ' --- Slot 6
430 ' color 4
440 DATA 00,00,00,00,00,0C,1E,1E,0C,0C,0C,04,02,01,00,00
450 DATA 0C,1E,1A,1A,1E,0C,00,00,00,00,00,00,00,C0,A0,E0
490 '
500 ' --- Slot 7
510 ' color 4
520 DATA 00,00,00,00,00,0C,1E,1E,0F,17,23,39,28,30,00,00
530 DATA 0C,1E,1A,1A,1E,0C,00,00,00,00,00,80,58,34,1C,00
570 '
580 ' --- Slot 0
590 ' color 4
600 DATA 00,00,00,00,60,70,70,70,60,C0,80,80,40,70,50,60
610 DATA 18,3C,34,34,3C,18,00,00,02,04,08,04,07,05,06,00
650 '
660 ' --- Slot 9
670 ' color 15
680 DATA 00,07,1F,3F,7F,7F,FF,FF,FF,FF,FF,7F,7F,3F,1F,07
690 DATA 00,C0,F0,F8,FC,FC,FE,FE,FE,FE,FE,FC,FC,F8,F0,C0
700 '
710 ' --- Slot 10
720 ' color 15
730 DATA 00,03,03,02,02,04,04,04,0C,0C,1C,1C,9C,E4,78,1C
740 DATA 00,80,80,80,80,40,40,40,E0,70,38,3C,1C,13,0F,3E
750 '
760 ' --- Slot 11
770 ' color 15
780 DATA 00,00,03,03,02,02,04,04,0C,0C,1C,1C,1C,00,1C,7E
790 DATA 00,00,80,80,80,80,80,80,E0,7A,36,16,02,02,00,00
800 '
810 ' --- Slot 12
820 ' color 15
830 DATA 00,03,03,06,08,30,38,1C,1D,09,05,0D,19,00,01,07
840 DATA 00,80,80,80,80,80,80,80,80,80,C0,C0,C0,00,C0,E0
850 '
860 ' --- Slot 1
870 ' color 15
880 DATA 00,07,07,08,08,10,10,20,20,30,30,38,38,00,38,FC
890 DATA 00,C0,C0,40,40,40,40,20,20,30,30,38,38,00,38,FC
891 ' --- Slot 21
892 ' color 15
893 DATA 00,00,00,00,03,07,0C,10,20,38,1C,0E,07,00,07,1F
894 DATA 00,00,00,00,80,C0,40,80,80,E0,70,3C,1C,13,0F,BE

895 ' color 15
896 DATA 00,03,03,06,08,30,38,1E,1C,0B,07,0E,18,00,00,00
897 DATA 00,80,80,80,C0,40,40,60,70,38,3C,1C,13,0F,3C,00

898 ' color 15
899 DATA 03,03,02,02,04,05,09,09,18,18,38,B8,D8,68,30,01
900 DATA 80,80,80,80,80,00,00,00,80,C0,C0,E0,E0,90,70,E0
901 ' --- Slot 3
902 ' color 15
903 DATA F3,8F,C0,60,70,B0,D0,60,21,8F,DE,D8,D0,80,80,00
904 DATA 80,80,80,80,80,40,40,40,80,00,00,00,00,00,00,00

909 '
910 ' --- Slot 13
920 ' color 4
930 DATA 30,78,58,58,78,30,00,00,00,00,10,30,50,70,00,00
940 DATA 00,00,00,00,00,30,78,7C,3E,07,01,01,07,05,03,00
980 '
990 ' --- Slot 14
1000 ' color 4
1010 DATA 30,78,58,58,78,30,00,00,00,00,00,00,00,00,00,00
1020 DATA 00,00,00,00,00,30,78,78,38,18,08,08,10,F0,A0,60
1060 '
1070 ' --- Slot 15
1080 ' color 4
1090 DATA 30,78,58,58,78,30,00,00,00,00,00,00,00,03,05,07
1100 DATA 00,00,00,00,00,30,78,78,30,30,30,20,40,80,00,00
1140 '
1150 ' --- Slot 16
1160 ' color 4
1170 DATA 30,78,58,58,78,30,00,00,00,00,00,01,1A,2C,38,00
1180 DATA 00,00,00,00,00,30,78,78,F0,E8,C4,9C,14,0C,00,00
1220 '
1230 ' --- Slot 0
1240 ' color 4
1250 DATA 18,3C,2C,2C,3C,18,00,00,40,20,10,20,E0,A0,60,00
1260 DATA 00,00,00,00,06,0E,0E,0E,06,03,01,01,02,0E,0A,06
1300 '

5000 ' Enemy -
5010 ' --- Slot 0
5020 ' color 14
5030 DATA 07,1F,3F,7F,7F,FE,FC,F8,00,00,00,00,00,00,00,00
5040 DATA C0,F0,F8,FC,FC,FE,7E,3E,00,00,00,00,00,00,00,00
5050 '
5060 ' --- Slot 1
5070 ' color 14
5080 DATA 07,1F,3F,7F,7F,FF,F8,FC,00,00,00,00,00,00,00,00
5090 DATA C0,F0,F8,FC,FC,7E,7E,3E,00,00,00,00,00,00,00,00
5100 '
5110 ' --- Slot 2
5120 ' color 14
5130 DATA 07,1F,3F,7F,7F,FD,FC,FC,00,00,00,00,00,00,00,00
5140 DATA C0,F0,F8,FC,FC,FE,3E,7E,00,00,00,00,00,00,00,00
5150 '
5160 ' --- Slot 6
5170 ' color 14
5180 DATA 00,00,00,00,00,00,00,00,F8,FC,FE,7F,7F,3F,1F,07
5190 DATA 00,00,00,00,00,00,00,00,3E,7E,FE,FC,FC,F8,F0,C0
5200 '
5210 ' --- Slot 7
5220 ' color 14
5230 DATA 00,00,00,00,00,00,00,00,FC,F8,FF,7F,7F,3F,1F,07
5240 DATA 00,00,00,00,00,00,00,00,3E,7E,7E,FC,FC,F8,F0,C0
5250 '
5260 ' --- Slot 8
5270 ' color 14
5280 DATA 00,00,00,00,00,00,00,00,FC,FC,FD,7F,7F,3F,1F,07
5290 DATA 00,00,00,00,00,00,00,00,7E,3E,FE,FC,FC,F8,F0,C0
5300 '
5310 ' --- Slot 5
5320 ' color 14
5330 DATA 00,07,1F,3F,7F,7F,FE,FC,F8,FC,FE,7F,7F,3F,1F,07
5340 DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
5350 '
5360 ' --- Slot 6
5370 ' color 14
5380 DATA 00,07,1F,3F,7F,7F,FE,F8,FC,FC,FD,7F,7F,3F,1F,07
5390 DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
5400 '
5410 ' --- Slot 7
5420 ' color 14
5430 DATA 00,07,1F,3F,7F,7F,FD,FC,FC,F8,FF,7F,7F,3F,1F,07
5440 DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
5450 '
5460 ' --- Slot 9
5470 ' color 14
5480 DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
5490 DATA 00,E0,F8,FC,FE,FE,7F,3F,1F,3F,7F,FE,FE,FC,F8,E0
5500 '
5510 ' --- Slot 10
5520 ' color 14
5530 DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
5540 DATA 00,E0,F8,FC,FE,FE,7F,1F,3F,3F,BF,FE,FE,FC,F8,E0
5550 '
5560 ' --- Slot 11
5570 ' color 14
5580 DATA 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
5590 DATA 00,E0,F8,FC,FE,FE,BF,3F,3F,1F,FF,FE,FE,FC,F8,E0

7000 DATA *

INCLUDE "map.inc"

FILE "../res/map.chr.plet5"' 39
FILE "../res/map.clr.plet5"

7999 R=0:C=0

8000 COLOR 15,1,1:SCREEN 2,2,0
8001 DEFINT A-Z
8009 'BLOAD "design.sc2",S
8010 CMD WRTCHR 25:CMD WRTCLR 26 ' Got to load them 3 times
8011 CMD WRTVRAM 25, &H800:CMD WRTVRAM 26, &H2800
8012 CMD WRTVRAM 25, &H1000:CMD WRTVRAM 26, &H3000
8019 CMD WRTSCR R+C*5

8030 GOSUB 10000

8100 'New game initialization
8101 AD=1:X=8:Y=120:GS=1
8102 Y=20
8103 DIM EX(4),EY(4),EV(4),ET(4),ES(4),EW(4)' Enemy X, Y, Velocity, Type, Sprite, Wait. EC: Enemy Count

8800 ' Parse new room
8801 EC=0
8810 FOR I=0 TO &H400
8820  TT=VPEEK(&H1800+I)
8821  IF TT=192 THEN EC=EC+1:ET(EC)=1:EV(EC)=1:EX(EC)=(I MOD 32)*8:EY(EC)=(I\32)*8+1:VPOKE &H1800+I,0:VPOKE &H1800+I+1,0
8822  IF TT=160 THEN EC=EC+1:ET(EC)=2:EV(EC)=1:EX(EC)=(I MOD 32)*8:EY(EC)=(I\32)*8-12:VPOKE &H1800+I,0:VPOKE &H1800+I+1,0
8823  IF TT=163 THEN EC=EC+1:ET(EC)=3:EV(EC)=1:EX(EC)=(I MOD 32)*8+2:EY(EC)=(I\32)*8-2:VPOKE &H1800+I,0:VPOKE &H1800+I+32,0
8824  IF TT=162 THEN EC=EC+1:ET(EC)=4:EV(EC)=1:EX(EC)=(I MOD 32)*8-10:EY(EC)=(I\32)*8-2:VPOKE &H1800+I,0:VPOKE &H1800+I+32,0
8830 NEXT I

9000 ' BEGIN GAME LOOP
9001 TIME=0
9002 ' UPDATE
9003 ON GS GOSUB 9100, 9200, 9300, 9400
9005 GOSUB 9900 ' Update Enemies
9009 ' DRAW
9010 PUT SPRITE 1,(X,Y+YO),15,D:PUT SPRITE 0,(X,Y+4+YO),4,9+SA+D
9020 PUT SPRITE 2,(X,Y+14),14,1+ST+D
9030 IF EC=0 THEN 9090
9031 FOR I=1 TO EC
9035  PUT SPRITE 3+I,(EX(I),EY(I)),EA,25+ES(I)+ET(I)*3
9039 NEXT I
9089 ' END GAME LOOP
9090 IF TIME<1 GOTO 9090 ELSE 9000

9100 'GS=1 Standing
9101 S=STICK(0)
9102 VX=0
9112 IF S=3 THEN VX=1:IF D=14 OR SA=4 THEN D=0:AD=1:SA=0:ST=0 ELSE GOTO 9118
9113 IF S=7 THEN VX=-1:IF D=0 OR SA=4 THEN D=14:AD=1:SA=0:ST=0 ELSE GOTO 9118
9114 IF S=0 THEN SA=4:ST=3:YO=0' SA=4 marks a resting position
9115 IF S=5 THEN YO=3:ST=4:SA=4
9117 GOTO 9140
9118 IF S0=4 THEN S0=0 ELSE S0=S0+1:GOTO 9140
9120 SA=SA+AD: IF SA=3 THEN AD=-1 ELSE IF SA=0 THEN AD=1
9121 ST=ST+1:IF ST=3 THEN ST=0
9122 IF ST=1 THEN YO=1 ELSE YO=0
9140 IF NOT(STRIG(0)) THEN JD=0 ELSE IF JD=0 THEN GS=2:VY=-14:SA=0:ST=4:JD=1:DJ=1:WT=4:RETURN 'JD: Jump Debouncing, DJ=double jump
9141 X=X+VX
9145 TT = &H1800+((Y+32)\8)*32
9146 T0 = VPEEK (TT+(X+2)\8)
9147 T1 = VPEEK (TT+(X+8)\8)
9148 T2 = VPEEK (TT+(X+15)\8)
9149 TT = TT + X\8
9150 IF D=0 THEN T3=VPEEK(TT-&H80+2):T4=VPEEK(TT-&H60+2):T5=VPEEK(TT-&H40+2):T6=VPEEK(TT-&H20+2)
9151 IF D=14 THEN T3=VPEEK(TT-&H80):T4=VPEEK(TT-&H60):T5=VPEEK(TT-&H40):T6=VPEEK(TT-&H20)
9180 IF T3>=64 OR T4>=64 OR T5>=64 OR T6>=60 THEN X=X-VX
9182 IF T0<60 AND T1<60 AND T2<60 THEN IF AT>0 THEN AT=AT-1 ELSE GS=3:VX=0:ST=3:SA=4 ELSE AT=3
9197 IF X=239 THEN C=C+1:X=1:CMD WRTSCR R+C*5
9198 IF X=0 THEN C=C-1:X=238:CMD WRTSCR R+C*5
9199 RETURN

9200 'GS=2 Jumping
9210 VY=VY+1: IF VY>=0 THEN GS=3
9211 Y=Y+VY/4
9212 X=X+VX
9213 ST=5
9214 SA=3
9240 TT = &H1800+((Y+2)\8)*32
9241 T0 = VPEEK (TT+(X+2)\8)
9242 T1 = VPEEK (TT+(X+8)\8)
9243 T2 = VPEEK (TT+(X+15)\8)
9244 TT =  &H1800+X\8
9249 IF T0>=64 OR T1>=64 OR T2>=64 THEN VY=0:Y=Y-VY:Y=((Y+2)\8+1)*8-2:DJ=0:GS=3
9250 TT = &H1800+X\8
9251 ' We can simplify T3 and T7 calculated, then T4, T5 and T6 offset from T3 (or T4) as they can only overlap (it is either 4 or 5 consecutive tiles)
9254 IF VX>0 THEN T3=VPEEK(TT+(Y+32)\8*32+2):T4=VPEEK(TT+(Y+24)\8*32+2):T5=VPEEK(TT+(Y+16)\8*32+2):T6=VPEEK(TT+(Y+8)\8*32+2):T7=VPEEK(TT+(Y+2)\8*32+2)
9255 IF VX<0 THEN T3=VPEEK(TT+(Y+32)\8*32):T4=VPEEK(TT+(Y+24)\8*32):T5=VPEEK(TT+(Y+16)\8*32):T6=VPEEK(TT+(Y+8)\8*32):T7=VPEEK(TT+(Y+2)\8*32)
9281 IF T3>=64 OR T4>=64 OR T5>=64 OR T6>=64 OR T7>=64 THEN X=X-VX:IF VY>-4 THEN GOSUB 9800
9290 IF DJ=1 AND VY>-4 THEN GOSUB 9820
9298 IF Y<=0 THEN R=R-1:Y=146:CMD WRTSCR R+C*5
9299 RETURN

9300 'GS=3 Falling
9301 VY=VY+1: IF VY>14 THEN VY=14
9302 Y=Y+VY/4:X=X+VX
9314 SA=0:ST=6
9319 ' The next 3 lines enable gliding
9320 S=STICK(0)
9321 IF S=3 THEN VX=VX+1:IF VX>1 THEN VX=1:D=0
9322 IF S=7 THEN VX=VX-1:IF VX<-1 THEN VX=-1:D=14
9340 TT = &H1800+((Y+32)\8)*32
9341 T0 = VPEEK (TT+(X+2)\8)
9342 T1 = VPEEK (TT+(X+8)\8)
9343 T2 = VPEEK (TT+(X+15)\8)
9344 TT = &H1800+X\8
9354 IF VX>0 THEN T3=VPEEK(TT+(Y+32)\8*32+2):T4=VPEEK(TT+(Y+24)\8*32+2):T5=VPEEK(TT+(Y+16)\8*32+2):T6=VPEEK(TT+(Y+8)\8*32+2):T7=VPEEK(TT+(Y+2)\8*32+2)
9355 IF VX<0 THEN T3=VPEEK(TT+(Y+32)\8*32):T4=VPEEK(TT+(Y+24)\8*32):T5=VPEEK(TT+(Y+16)\8*32):T6=VPEEK(TT+(Y+8)\8*32):T7=VPEEK(TT+(Y+2)\8*32)
9381 IF T3>=64 OR T4>=64 OR T5>=64 OR T6>=64 OR T7>=64 THEN X=X-VX:GOSUB 9800 'Wall jump check
9385 IF T0>=60 OR T1>=60 OR T2>=60 THEN GS=1:JD=1:DJ=0:SA=4:ST=4:VX=0:Y=((Y+32)\8)*8-32
9390 IF DJ=1 THEN GOSUB 9820'Double Jump check
9398 IF Y>=146 THEN R=R+1:Y=0:CMD WRTSCR R+C*5
9399 RETURN

9400 'GS=4 Initial hold onto wall
9401 WT=WT-1: IF WT=0 THEN GS=3' WT: Wall Time is reset each time we start a jump
9402 IF NOT(STRIG(0)) THEN JD=0 ELSE IF JD=0 THEN GS=2:VY=-14:VX=-VX:JD=1:WT=4:IF D=0 THEN D=14 ELSE D=0'JD: Jump Debouncing
9499 RETURN


9800 'Check for wall jump, need to have a substantial amount of wall to grip to
9801 IF T5>=64 AND (T4>=64 OR T6>=64) THEN IF WT>0 THEN GS=4:GOTO 9809 ELSE 9802 ELSE 9809
9802 SA=3:ST=7
9803 IF VY>7 THEN VY=7 ELSE IF VY<-9 THEN VY=-9
9808 IF NOT(STRIG(0)) THEN JD=0 ELSE IF JD=0 THEN GS=2:VY=-14:VX=-VX:JD=1:WT=4:IF D=0 THEN D=14 ELSE D=0'JD: Jump Debouncing
9809 RETURN

9820 'Double Jump Check
9821 IF JD=1 AND NOT(STRIG(0)) THEN JD=0:GOTO 9829
9822 IF JD=0 AND STRIG(0) THEN GS=2:SA=0:ST=4:JD=1:DJ=0:VY=VY-14:IF VY<-14 THEN VY=-14 ELSE IF VY>-6 THEN VY=-6
9829 RETURN

9900 'MOVE ENEMIES
9901 IF EC=0 THEN RETURN
9902 FOR EI=1 TO EC
9903  EW(EI)=EW(EI)+1:IF EW(EI)=3 THEN EW(EI)=0:ES(EI)=ES(EI)+EV(EI):IF ES(EI)=3 THEN ES(EI)=0 ELSE IF ES(EI)=-1 THEN ES(EI)=2
9904  ON ET(EI) GOSUB 9910,9920,9930,9940
9905  ' Colision box detection
9906  IF ABS(X-EX(EI))<16 AND Y-EY(EI)>-32 AND Y-EY(EI)<32 THEN EA=8 ELSE EA=14
9908 NEXT I
9909 RETURN

9910 'Horizontal moving enemy, lower
9911 EX(EI)=EX(EI)+EV(EI)
9913 IF EX(EI) MOD 8=0 THEN EL=VPEEK(&H1800+((EY(EI)+9)\8)*32+(EX(EI)+8+4*EV(EI))\8):IF EL=75 OR EL=77 THEN EV(EI)=-EV(EI)
9919 RETURN

9920 ' Horizontal moving enemy, upper
9921 EX(EI)=EX(EI)+EV(EI)
9923 IF EX(EI) MOD 8=0 THEN EL=VPEEK(&H1800+((EY(EI))\8)*32+(EX(EI)+8+4*EV(EI))\8):IF EL=107 OR EL=109 THEN EV(EI)=-EV(EI)
9929 RETURN

9930 ' Vertical moving enemy, right wall
9931 EY(EI)=EY(EI)+EV(EI)
9933 IF EY(EI) MOD 8=0 THEN EL=VPEEK(&H1800+((EY(EI)+10+4*EV(EI))\8)*32+(EX(EI)+8)\8):IF EL=79 OR EL=111 THEN EV(EI)=-EV(EI)
9939 RETURN

9940 ' Vertical moving enemy, left wall
9941 EY(EI)=EY(EI)+EV(EI)
9943 IF EY(EI) MOD 8=0 THEN EL=VPEEK(&H1800+((EY(EI)+10+4*EV(EI))\8)*32+(EX(EI)+8)\8):IF EL=78 OR EL=110 THEN EV(EI)=-EV(EI)
9949 RETURN

10000 REM -- LOAD SPRITES
10010 S=BASE(9)
10020 READ R$: IF R$="*" THEN RETURN ELSE VPOKE S,VAL("&H"+R$):S=S+1:GOTO 10020
