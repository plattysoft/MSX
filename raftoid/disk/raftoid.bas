1 'BLOAD "XBASIC.BIN",R
2 'CALL TURBO ON
3 color 2,1,1
4 SCREEN 2, 2
5 ' TODO: make the ball smaller
6 ' TODO: Game over animation + lives
7 ' TODO: WIN animation
15 GOSUB 6000
16 GOSUB 7000
17 GOSUB 9000
90 GOTO 4000

100 ' GAME LOOP
110 s=stick(0)
111 if s=3 then ax=ax+0.5
112 if s=7 then ax=ax-0.5
121 ax=ax*0.9
130 x=x+ax
131 if x<8 then x=8:ax=0
132 if x>152 then x=152:ax=0
140 by=by+vy
150 bx=bx+vx
300 if bx > 178 THEN bx = 178: vx = -vx
310 if bx < 8 THEN bx = 8: vx = -vx
321 if by>184 THEN goto 800
330 if by<8 THEN by = 8: vy = -vy
361 put sprite 0, (bx,by), 15, 0
362 put sprite 1, (x,170), 15, 1
363 put sprite 2, (x+16,170), 15, 2 
400 ' BOUNDING BOX COLISION DETECTION
410 if vx>0 THEN sa=(bx+6-8)\16 ELSE sa=(bx-1-8)\16
411 sb=(by+3)\8
412 if VPEEK (&H1800+sa*2+1+sb*32) > 9 THEN vx=-vx: GOSUB 850
415 if vy>0 THEN sb=(by+6)\8 ELSE sb=(by-1)\8
416 sa=(bx+3-8)\16
420 if VPEEK (&H1800+sa*2+1+sb*32) > 9 THEN vy=-vy: GOSUB 850
450 if by>168 AND by<180 AND bx>x-7 AND bx<x+32 then GOSUB 700

490 goto 100

500 ' LOAD AND DRAW LEVEL
501 put sprite 0, (0,0), 0, 0
502 put sprite 1, (0,0), 0, 0
503 put sprite 2, (0,0), 0, 0
518 if L = 1 then restore 900 else restore 910
519 NB = 0
520 FOR J=1 TO 8
521   FOR I=0 TO 10
523     READ C
532     IF C > 0 THEN NB=NB+1: VPOKE &H1800+i*2+1+j*32, c*2+8: VPOKE &H1800+i*2+2+j*32, c*2+9
540   NEXT I
541 NEXT J
575 bx = 96: by = 100: vx = 0: vy = 4
576 x = 86: ax=0
590 RETURN

700 d=bx-x-12
710 if d<-15 then vy=-1:vx=-4:return
720 if d<-10 then vy=-3:vx=-3:return
730 if d<-5 then vy=-4:vx=-1:return
740 if d<5 then vy=-vy:return
750 if d<10 then vy=-4:vx=1:return
760 if d<15 then vy=-3:vx=3:return
770 vy=-4:vx=1
799 RETURN

800 ' GAME OVER
801 put sprite 0, (0,0), 0, 0
802 put sprite 1, (0,0), 0, 0
803 put sprite 2, (0,0), 0, 0
810 GOTO 4000

850 ' BRICK HIT at sa, sb 
851 bc=(VPEEK(&H1800+sa*2+1+sb*32)-8)/2: nc=1
852 if bc=12 THEN RETURN
853 if bc=11 THEN nc=10
854 if bc=10 THEN nc=9
855 if bc=8 THEN nc=7
856 IF nc=1 THEN GOTO 880
860 VPOKE &H1800+sa*2+1+sb*32, nc*2+8: VPOKE &H1800+sa*2+2+sb*32, nc*2+8+1
870 RETURN
880 NB=NB-1
887 if sb MOD 2 = 0 THEN nc=NC:cn=nc-1 ELSE cn=nc:nc=nc-1
889 VPOKE &H1800+sa*2+1+sb*32, NC: VPOKE &H1800+sa*2+2+sb*32, CN
890 IF NB=0 THEN L=L+1: GOSUB 500
899 RETURN

900 ' DATA for levels, color 12 is undestructible, 8 is 2 hits (8->7), 11 is 3 hits (11->10->9)
901 DATA 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
902 DATA 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0
903 DATA 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0
904 DATA 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0
905 DATA 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0
906 DATA 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0
907 DATA 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0
908 DATA 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0

910 DATA 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
912 DATA 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
913 DATA 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2
914 DATA 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3
915 DATA 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4
916 DATA 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5
917 DATA 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6
918 DATA 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

920 DATA 0, 2, 1, 2, 1, 2, 1, 2, 1, 2, 0
922 DATA 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2
923 DATA 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1
924 DATA 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2
925 DATA 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1
926 DATA 0, 1, 2, 1, 2, 1, 2, 1, 2, 1, 0

3900 'CLS
3910 FOR I=0 TO 1535
3920   VPOKE &H1800+I, 50
3930 NEXT I
3950 RETURN

4000 ' START SCREEN
4001 GOSUB 3900
4010 T$ = "RAFTOID":TX=12:TY=1: GOSUB 9090
4011 T$ = "PRESS SPACE TO START":TX=5:TY=7: GOSUB 9090
4020 A$=inkey$
4030 if A$=" " GOTO 4050
4040 GOTO 4020
4050 L=1
4060 GOSUB 3900
4071 GOSUB 4100
4080 GOSUB 500
4090 GOTO 100

4100 ' DRAW THE GRID
4160 FOR K=0 TO 23
4170 FOR I=0 TO 23
4180 if i MOD 2 = k MOD 2 THEN V=0 ELSE V=1
4181 if i=0 OR i=23 THEN V = K MOD 4 + 2
4183 if K=0 THEN V = 6 + I MOD 4
4189 VPOKE &H1800+i+K*32, V
4190 NEXT I
4200 NEXT K
4299 RETURN

6000 ' LOAD SPRITES
6010 RESTORE 6100
6020 FOR I=1 TO 8
6030   READ L: A$=A$+CHR$(L)
6040 NEXT I
6050 SPRITE$(0)=A$
6060 FOR S=1 TO 2
6061   A$=""
6062   FOR I=1 TO 32
6063     READ L: A$=A$+CHR$(L)
6064   NEXT I
6065   SPRITE$(S)=A$
6066 NEXT S
6090 RETURN

6100 ' BALL SPRITE
6101 DATA &H38,&H7C,&HFE,&HFE,&HFE,&H7C,&H38,&H00

6120 ' LEFT SPRITE
6130 DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
6140 DATA &H00,&H00,&H67,&H67,&H4F,&H4F,&H67,&H67
6150 DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
6160 DATA &H00,&H00,&HFF,&HFF,&HFF,&HFF,&HFF,&HFF
6200 ' RIGHT SPRITE
6210 DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
6220 DATA &H00,&H00,&HFF,&HFF,&HFF,&HFF,&HFF,&HFF
6230 DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
6240 DATA &H00,&H00,&HE6,&HE6,&HF2,&HF2,&HE6,&HE6

7000 ' LOAD TILES
7001 RESTORE 8000
7010 FOR j=0 to 207
7081 READ R$
7090 VPOKE j, VAL("&H"+R$)
7110 VPOKE 2048+j, VAL("&H"+R$)
7130 VPOKE 4096+j, VAL("&H"+R$)
7150 next J
7151 'Now read the colors
7152 FOR j=0 to 207
7153 READ C
7155 VPOKE &H2000+j, C
7156 VPOKE &H2000+2048+j, C
7157 VPOKE &H2000+4096+j, C
7158 NEXT J
7200 RETURN

8000 'TILES PATTERN
8010 DATA E0,8F,0F,1E,1E,3D,30,7D
8020 DATA 7D,7D,70,B8,B0,D0,40,80
8100 DATA 7A,7A,7A,7A,7A,7A,7A,7A,7A,7A,7A,7A,7A,7A,7A,7A
8200 DATA 7E,BF,BF,BF,BF,00,BF,00,BF,00,BF,00,BF,BF,BF,7E
8210 DATA 00,7F,7F,7F,7F,7F,7F,00,00,FE,FE,FE,FE,FE,FE,00
8220 DATA 7A,FA,FA,FA,FA,FA,FA,7A,AE,AF,AF,AF,AF,AF,AF,AE
8230 DATA FF,FF,FF,FF,FF,FF,FF,00,FE,FE,FE,FE,FE,FE,FE,00
8231 DATA FF,FF,FF,FF,FF,FF,FF,00,FE,FE,FE,FE,FE,FE,FE,00
8232 DATA FF,FF,FF,FF,FF,FF,FF,00,FE,FE,FE,FE,FE,FE,FE,00
8233 DATA FF,FF,FF,FF,FF,FF,FF,00,FE,FE,FE,FE,FE,FE,FE,00
8234 DATA FF,FF,FF,FF,FF,FF,FF,00,FE,FE,FE,FE,FE,FE,FE,00
8235 DATA FF,FF,FF,FF,FF,FF,FF,00,FE,FE,FE,FE,FE,FE,FE,00
8236 DATA FF,FF,FF,FF,FF,FF,80,80,FF,FF,FC,FC,FC,FC,00,00
8237 DATA FF,FF,FF,FF,FF,FF,80,80,FF,FF,FC,FC,FC,FC,00,00

8300 'COLOR
8500 DATA 65,65,65,65,65,65,65,65
8600 DATA 65,65,65,65,65,65,65,65
8800 DATA 33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33
8900 DATA 49,35,35,35,35,33,35,33,35,33,35,33,35,35,35,49
8910 DATA 33,33,49,33,33,33,33,33,33,33,49,33,33,33,33,33
8920 DATA 33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33
8930 DATA &H31,&H31,&H31,&H31,&H31,&H31,&H31,&H31,&H31,&H31,&H31,&H31,&H31,&H31,&H31,&H31
8931 DATA &H81,&H81,&H81,&H81,&H81,&H81,&H81,&H81,&H81,&H81,&H81,&H81,&H81,&H81,&H81,&H81
8932 DATA &HD1,&HD1,&HD1,&HD1,&HD1,&HD1,&HD1,&HD1,&HD1,&HD1,&HD1,&HD1,&HD1,&HD1,&HD1,&HD1
8933 DATA &HE1,&HE1,&HE1,&HE1,&HE1,&HE1,&HE1,&HE1,&HE1,&HE1,&HE1,&HE1,&HE1,&HE1,&HE1,&HE1
8934 DATA &H71,&H71,&H71,&H71,&H71,&H71,&H71,&H71,&H71,&H71,&H71,&H71,&H71,&H71,&H71,&H71
8935 DATA &HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1
8936 DATA &HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1
8937 DATA &HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1,&HA1

9000 'LOAD FONT
9010 RESTORE 9100
9030 FOR j=0 to 207
9040 READ R$
9050 VPOKE 520+j, VAL("&H"+R$)
9060 VPOKE &H2000+520+j, &H21
9070 NEXT j
9080 RETURN

9090 FOR i=1 to LEN(T$)
9091   CT$=MID$(T$,i,1)
9092   VPOKE &H1800+tx+ty*32+i, ASC(CT$)
9093 NEXT I
9094 RETURN

9100 DATA 02,06,0e,1e,3e,76,e6,76,fe,cc,d8,fe,cc,d8,f0,e0
9110 DATA 7e,fc,c0,c0,c0,c0,fc,7e,fe,fe,cc,d8,f0,e0,c0,80
9120 DATA fe,fe,00,fe,fe,00,fe,fe,ff,fe,c0,fc,f8,c0,c0,80
9130 DATA 7e,fc,c0,c0,c2,c6,fe,7f,c6,c6,c6,fe,fe,c6,c6,84
9140 DATA 38,38,38,38,38,38,30,20,02,06,06,06,06,06,7e,fe
9150 DATA ce,dc,f8,f0,f8,dc,ce,86,40,c0,c0,c0,c0,c0,fe,fc
9160 DATA 82,c6,ee,fe,fe,d6,c6,c6,c6,e6,f6,fe,de,ce,c6,42
9170 DATA 7c,fe,c6,c6,c6,c6,fe,7c,fc,fe,06,fe,fc,c0,c0,80
9180 DATA 7c,fe,c6,c6,d6,fe,7c,10,c8,dc,ce,dc,f8,dc,ce,86
9190 DATA fe,fe,80,fe,fe,02,fe,fe,fe,fc,30,30,30,30,30,20
9200 DATA 82,c6,c6,c6,c6,c6,fe,7c,03,06,cc,d8,f0,e0,c0,80
9210 DATA c6,c6,d6,fe,fe,ee,c6,82,86,ce,fc,78,3c,7e,e6,c2
9220 DATA 87,ce,fc,78,30,30,30,20,7e,fe,1c,38,70,e0,fe,fc
9230 DATA f0,e0,f0,e0